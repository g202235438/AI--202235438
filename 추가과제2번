#test데이터 비율을 0.1로 조절하거나 knn을 적절히 조절하면 좋은 정확도를 얻을 수 있었습니다. k값을 21로 조절하니 좋은 정확도가 나왔습니다.
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier

import numpy as np
import pandas as pd

breast_cancer_data = load_breast_cancer()
df_data = pd.DataFrame(breast_cancer_data.data)

df_labels = pd.DataFrame(breast_cancer_data.target)
#(숙제 : data와 labels 열개만 출력해서 실제 값을 확인하세요)
print(df_data[:10])
print(df_labels[:10])

print(breast_cancer_data.target_names)
#(X_train, y_train, X_test, y_test 로 훈련과 테스트 데이터를 8:2로 나누기)
X_train, X_test, y_train, y_test = train_test_split(df_data,df_labels,test_size=0.2, shuffle=False, random_state=569)

print("X_train.shape :", X_train.shape)

print("y_train.shape :", y_train.shape)

print("X_test.shape:", X_test.shape)

print("y_test.shape:", y_test.shape)

#(KNN 알고리즘 모델 만들기, K값은 21을 사용)
mymodel= KNeighborsClassifier(n_neighbors=21)
#(KNN 모델 훈련)


mymodel.fit(X_train, y_train)

# 예측

prediction = mymodel.predict(X_test)

mymodel.score(X_test, y_test)
